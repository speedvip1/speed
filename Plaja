local library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- تأثيرات الحركة المتقدمة
local AnimationStyles = {
    smooth = TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
    bounce = TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
    elastic = TweenInfo.new(0.6, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out),
    quick = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    slow = TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
}

-- نظام الأصوات المحسن
function play(soundId, volume, pitch)
    for _, v in pairs(workspace:GetChildren()) do
        if v.Name == "GUISound" then
            v:Destroy()
        end
    end
    
    local sound = Instance.new("Sound")
    sound.Name = "GUISound"
    sound.Parent = workspace
    sound.Volume = volume or 0.5
    sound.Pitch = pitch or 1
    sound.SoundId = soundId
    
    -- تأثير fade in للصوت
    sound.Volume = 0
    sound:Play()
    TweenService:Create(sound, AnimationStyles.quick, {Volume = volume or 0.5}):Play()
end

-- تأثيرات بصرية متقدمة
local function createGlow(parent, color)
    local glow = Instance.new("ImageLabel")
    glow.Name = "Glow"
    glow.Parent = parent
    glow.BackgroundTransparency = 1
    glow.Image = "rbxassetid://4996891970"
    glow.ImageColor3 = color
    glow.ImageTransparency = 0.8
    glow.Size = UDim2.new(1.2, 0, 1.2, 0)
    glow.Position = UDim2.new(-0.1, 0, -0.1, 0)
    glow.ZIndex = parent.ZIndex - 1
    return glow
end

local function addHoverEffect(button, theme3)
    local originalColor = button.ImageColor3
    local glow = createGlow(button, theme3)
    glow.ImageTransparency = 1
    
    button.MouseEnter:Connect(function()
        TweenService:Create(button, AnimationStyles.quick, {
            ImageColor3 = Color3.fromRGB(
                math.min(255, originalColor.R * 255 + 20),
                math.min(255, originalColor.G * 255 + 20),
                math.min(255, originalColor.B * 255 + 20)
            )
        }):Play()
        
        TweenService:Create(glow, AnimationStyles.quick, {ImageTransparency = 0.6}):Play()
        TweenService:Create(button, AnimationStyles.quick, {Size = button.Size + UDim2.new(0, 2, 0, 2)}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, AnimationStyles.quick, {ImageColor3 = originalColor}):Play()
        TweenService:Create(glow, AnimationStyles.quick, {ImageTransparency = 1}):Play()
        TweenService:Create(button, AnimationStyles.quick, {Size = button.Size - UDim2.new(0, 2, 0, 2)}):Play()
    end)
end

-- إنشاء تأثير جسيمات
local function createParticles(parent)
    for i = 1, 5 do
        local particle = Instance.new("Frame")
        particle.Name = "Particle"
        particle.Parent = parent
        particle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        particle.BackgroundTransparency = 0.7
        particle.BorderSizePixel = 0
        particle.Size = UDim2.new(0, math.random(1, 3), 0, math.random(1, 3))
        particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = particle
        
        -- حركة الجسيمات
        local function animateParticle()
            TweenService:Create(particle, AnimationStyles.slow, {
                Position = UDim2.new(math.random(), 0, math.random(), 0),
                BackgroundTransparency = math.random(0.3, 0.9)
            }):Play()
        end
        
        animateParticle()
        spawn(function()
            while particle.Parent do
                wait(math.random(2, 5))
                animateParticle()
            end
        end)
    end
end

function library:CreateWindow(name, theme)
    local themeColors = {
        Normal = {
            primary = Color3.fromRGB(32, 32, 32),
            secondary = Color3.fromRGB(26, 26, 26),
            accent = Color3.fromRGB(176, 148, 255)
        },
        Reverse = {
            primary = Color3.fromRGB(26, 26, 26),
            secondary = Color3.fromRGB(32, 32, 32),
            accent = Color3.fromRGB(176, 148, 255)
        },
        Blood = {
            primary = Color3.fromRGB(32, 32, 32),
            secondary = Color3.fromRGB(26, 26, 26),
            accent = Color3.fromRGB(220, 53, 69)
        },
        Neon = {
            primary = Color3.fromRGB(15, 15, 25),
            secondary = Color3.fromRGB(25, 25, 40),
            accent = Color3.fromRGB(0, 255, 127)
        },
        Ocean = {
            primary = Color3.fromRGB(20, 33, 61),
            secondary = Color3.fromRGB(37, 55, 84),
            accent = Color3.fromRGB(64, 224, 255)
        }
    }
    
    local colors = themeColors[theme] or themeColors.Normal
    local isLightAccent = (colors.accent.R + colors.accent.G + colors.accent.B) > 1.5
    
    print(" Theme activated: " .. (theme or "Normal"))
    
    -- تنظيف الواجهات السابقة
    for _, v in pairs(game.CoreGui:GetChildren()) do
        if v.Name == "EnhancedGUI" then
            local closeTween = TweenService:Create(v, AnimationStyles.smooth, {
                Size = UDim2.new(0, 0, 0, 0),
                BackgroundTransparency = 1
            })
            closeTween:Play()
            closeTween.Completed:Connect(function() v:Destroy() end)
        end
    end

    -- إنشاء الواجهة الرئيسية
    local screenGui = Instance.new("ScreenGui")
    local topBar = Instance.new("Frame")
    local titleLabel = Instance.new("TextLabel")
    local toggleButton = Instance.new("ImageButton")
    local mainFrame = Instance.new("Frame")
    local tabContainer = Instance.new("Frame")
    local contentFrame = Instance.new("Frame")
    local blurEffect = Instance.new("BlurEffect")

    -- خصائص الواجهة
    screenGui.Name = "EnhancedGUI"
    screenGui.Parent = game.CoreGui
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    -- شريط العنوان مع تدرج لوني
    topBar.Name = "TopBar"
    topBar.Parent = screenGui
    topBar.BackgroundColor3 = colors.primary
    topBar.BorderSizePixel = 0
    topBar.Position = UDim2.new(0.5, -300, 0.1, 0)
    topBar.Size = UDim2.new(0, 600, 0, 35)
    topBar.Active = true
    topBar.Draggable = true
    
    -- تأثير التدرج
    local gradient = Instance.new("UIGradient")
    gradient.Parent = topBar
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, colors.primary),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(
            math.min(255, colors.primary.R * 255 + 30),
            math.min(255, colors.primary.G * 255 + 30),
            math.min(255, colors.primary.B * 255 + 30)
        ))
    })
    gradient.Rotation = 45

    local topCorner = Instance.new("UICorner")
    topCorner.CornerRadius = UDim.new(0, 12)
    topCorner.Parent = topBar

    -- عنوان النافذة
    titleLabel.Parent = topBar
    titleLabel.BackgroundTransparency = 1
    titleLabel.Position = UDim2.new(0, 15, 0, 0)
    titleLabel.Size = UDim2.new(1, -50, 1, 0)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = " " .. (name or "Enhanced GUI")
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left

    -- زر الإخفاء/الإظهار
    toggleButton.Name = "ToggleButton"
    toggleButton.Parent = topBar
    toggleButton.BackgroundTransparency = 1
    toggleButton.Position = UDim2.new(1, -30, 0.5, -10)
    toggleButton.Size = UDim2.new(0, 20, 0, 20)
    toggleButton.Image = "rbxassetid://7072725342"
    toggleButton.ImageColor3 = colors.accent
    toggleButton.Rotation = 0

    -- الإطار الرئيسي
    mainFrame.Name = "MainFrame"
    mainFrame.Parent = screenGui
    mainFrame.BackgroundColor3 = colors.secondary
    mainFrame.BorderSizePixel = 0
    mainFrame.Position = UDim2.new(0.5, -300, 0.1, 35)
    mainFrame.Size = UDim2.new(0, 600, 0, 400)
    
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 12)
    mainCorner.Parent = mainFrame

    -- إضافة الجسيمات
    createParticles(mainFrame)

    -- حاوي التبويبات
    tabContainer.Name = "TabContainer"
    tabContainer.Parent = mainFrame
    tabContainer.BackgroundColor3 = Color3.fromRGB(
        colors.primary.R * 255 + 10,
        colors.primary.G * 255 + 10,
        colors.primary.B * 255 + 10
    )
    tabContainer.Position = UDim2.new(0, 10, 0, 10)
    tabContainer.Size = UDim2.new(0, 150, 1, -20)
    
    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 8)
    tabCorner.Parent = tabContainer
    
    local tabLayout = Instance.new("UIListLayout")
    tabLayout.Parent = tabContainer
    tabLayout.Padding = UDim.new(0, 5)
    tabLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- منطقة المحتوى
    contentFrame.Name = "ContentFrame"
    contentFrame.Parent = mainFrame
    contentFrame.BackgroundColor3 = colors.primary
    contentFrame.Position = UDim2.new(0, 170, 0, 10)
    contentFrame.Size = UDim2.new(1, -180, 1, -20)
    
    local contentCorner = Instance.new("UICorner")
    contentCorner.CornerRadius = UDim.new(0, 8)
    contentCorner.Parent = contentFrame

    -- تأثيرات الظهور الأولي
    topBar.Position = UDim2.new(0.5, -300, -0.1, 0)
    mainFrame.Position = UDim2.new(0.5, -300, -0.1, 35)
    
    TweenService:Create(topBar, AnimationStyles.bounce, {
        Position = UDim2.new(0.5, -300, 0.1, 0)
    }):Play()
    
    TweenService:Create(mainFrame, AnimationStyles.bounce, {
        Position = UDim2.new(0.5, -300, 0.1, 35)
    }):Play()

    -- منطق الإخفاء/الإظهار
    local isVisible = true
    toggleButton.MouseButton1Click:Connect(function()
        play("rbxassetid://6652067432", 0.3, 1.2)
        isVisible = not isVisible
        
        local targetPos = isVisible and 
            UDim2.new(0.5, -300, 0.1, 35) or 
            UDim2.new(0.5, -300, 0.1, -400)
        
        local rotateTween = TweenService:Create(toggleButton, AnimationStyles.quick, {
            Rotation = isVisible and 0 or 180
        })
        
        local moveTween = TweenService:Create(mainFrame, AnimationStyles.smooth, {
            Position = targetPos
        })
        
        rotateTween:Play()
        moveTween:Play()
    end)

    -- إضافة تأثير hover للزر
    addHoverEffect(toggleButton, colors.accent)

    local windowLibrary = {}
    
    function windowLibrary:CreateTab(tabName)
        local tabButton = Instance.new("TextButton")
        local tabFrame = Instance.new("ScrollingFrame")
        local contentLayout = Instance.new("UIListLayout")
        
        -- زر التبويب
        tabButton.Name = tabName
        tabButton.Parent = tabContainer
        tabButton.BackgroundColor3 = colors.secondary
        tabButton.BorderSizePixel = 0
        tabButton.Size = UDim2.new(1, -10, 0, 35)
        tabButton.Font = Enum.Font.GothamSemibold
        tabButton.Text = " " .. tabName
        tabButton.TextColor3 = Color3.fromRGB(200, 200, 200)
        tabButton.TextSize = 14
        
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 6)
        buttonCorner.Parent = tabButton
        
        -- محتوى التبويب
        tabFrame.Name = tabName .. "Content"
        tabFrame.Parent = contentFrame
        tabFrame.BackgroundTransparency = 1
        tabFrame.BorderSizePixel = 0
        tabFrame.Position = UDim2.new(0, 10, 0, 10)
        tabFrame.Size = UDim2.new(1, -20, 1, -20)
        tabFrame.ScrollBarThickness = 6
        tabFrame.ScrollBarImageColor3 = colors.accent
        tabFrame.Visible = false
        
        contentLayout.Parent = tabFrame
        contentLayout.Padding = UDim.new(0, 8)
        contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        -- تحديث حجم التمرير تلقائياً
        contentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            tabFrame.CanvasSize = UDim2.new(0, 0, 0, contentLayout.AbsoluteContentSize.Y + 20)
        end)
        
        -- منطق التبديل بين التبويبات
        tabButton.MouseButton1Click:Connect(function()
            play("rbxassetid://6652067432", 0.4, 0.8)
            
            -- إخفاء جميع التبويبات
            for _, child in pairs(contentFrame:GetChildren()) do
                if child:IsA("ScrollingFrame") then
                    TweenService:Create(child, AnimationStyles.quick, {
                        Position = child.Position + UDim2.new(-1, 0, 0, 0)
                    }):Play()
                    
                    wait(0.1)
                    child.Visible = false
                    child.Position = UDim2.new(0, 10, 0, 10)
                end
            end
            
            -- إعادة تعيين ألوان الأزرار
            for _, child in pairs(tabContainer:GetChildren()) do
                if child:IsA("TextButton") then
                    TweenService:Create(child, AnimationStyles.quick, {
                        BackgroundColor3 = colors.secondary,
                        TextColor3 = Color3.fromRGB(200, 200, 200)
                    }):Play()
                end
            end
            
            -- تفعيل التبويب المحدد
            TweenService:Create(tabButton, AnimationStyles.quick, {
                BackgroundColor3 = colors.accent,
                TextColor3 = isLightAccent and Color3.fromRGB(0, 0, 0) or Color3.fromRGB(255, 255, 255)
            }):Play()
            
            tabFrame.Visible = true
            tabFrame.Position = UDim2.new(1, 10, 0, 10)
            TweenService:Create(tabFrame, AnimationStyles.smooth, {
                Position = UDim2.new(0, 10, 0, 10)
            }):Play()
        end)
        
        addHoverEffect(tabButton, colors.accent)
        
        -- تفعيل التبويب الأول تلقائياً
        if #tabContainer:GetChildren() == 2 then -- UIListLayout + first tab
            tabButton.MouseButton1Click:Fire()
        end
        
        local tabLibrary = {}
        
        -- إنشاء الأزرار
        function tabLibrary:CreateButton(text, callback)
            local button = Instance.new("TextButton")
            
            button.Name = text
            button.Parent = tabFrame
            button.BackgroundColor3 = colors.secondary
            button.BorderSizePixel = 0
            button.Size = UDim2.new(1, -20, 0, 35)
            button.Font = Enum.Font.GothamSemibold
            button.Text = "🔘 " .. text
            button.TextColor3 = Color3.fromRGB(255, 255, 255)
            button.TextSize = 14
            
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 8)
            corner.Parent = button
            
            button.MouseButton1Click:Connect(function()
                play("rbxassetid://6652067432", 0.5, 1)
                
                -- تأثير النقر
                button.Size = button.Size - UDim2.new(0, 4, 0, 2)
                TweenService:Create(button, AnimationStyles.bounce, {
                    Size = button.Size + UDim2.new(0, 4, 0, 2)
                }):Play()
                
                pcall(callback)
            end)
            
            addHoverEffect(button, colors.accent)
            return button
        end
        
        -- إنشاء المفاتيح
        function tabLibrary:CreateToggle(text, callback)
            local toggleFrame = Instance.new("Frame")
            local toggleLabel = Instance.new("TextLabel")
            local toggleSwitch = Instance.new("Frame")
            local toggleKnob = Instance.new("Frame")
            local toggleButton = Instance.new("TextButton")
            
            toggleFrame.Name = text
            toggleFrame.Parent = tabFrame
            toggleFrame.BackgroundColor3 = colors.secondary
            toggleFrame.BorderSizePixel = 0
            toggleFrame.Size = UDim2.new(1, -20, 0, 40)
            
            local frameCorner = Instance.new("UICorner")
            frameCorner.CornerRadius = UDim.new(0, 8)
            frameCorner.Parent = toggleFrame
            
            toggleLabel.Parent = toggleFrame
            toggleLabel.BackgroundTransparency = 1
            toggleLabel.Position = UDim2.new(0, 15, 0, 0)
            toggleLabel.Size = UDim2.new(1, -80, 1, 0)
            toggleLabel.Font = Enum.Font.GothamSemibold
            toggleLabel.Text = " " .. text
            toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            toggleLabel.TextSize = 14
            toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            toggleSwitch.Parent = toggleFrame
            toggleSwitch.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            toggleSwitch.Position = UDim2.new(1, -55, 0.5, -8)
            toggleSwitch.Size = UDim2.new(0, 40, 0, 16)
            
            local switchCorner = Instance.new("UICorner")
            switchCorner.CornerRadius = UDim.new(0, 8)
            switchCorner.Parent = toggleSwitch
            
            toggleKnob.Parent = toggleSwitch
            toggleKnob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            toggleKnob.Position = UDim2.new(0, 2, 0.5, -6)
            toggleKnob.Size = UDim2.new(0, 12, 0, 12)
            
            local knobCorner = Instance.new("UICorner")
            knobCorner.CornerRadius = UDim.new(0, 6)
            knobCorner.Parent = toggleKnob
            
            toggleButton.Parent = toggleSwitch
            toggleButton.BackgroundTransparency = 1
            toggleButton.Size = UDim2.new(1, 0, 1, 0)
            toggleButton.Text = ""
            
            local isEnabled = false
            
            toggleButton.MouseButton1Click:Connect(function()
                isEnabled = not isEnabled
                play("rbxassetid://6652067432", 0.3, isEnabled and 1.2 or 0.8)
                
                local switchColor = isEnabled and colors.accent or Color3.fromRGB(60, 60, 60)
                local knobPos = isEnabled and UDim2.new(1, -14, 0.5, -6) or UDim2.new(0, 2, 0.5, -6)
                
                TweenService:Create(toggleSwitch, AnimationStyles.smooth, {BackgroundColor3 = switchColor}):Play()
                TweenService:Create(toggleKnob, AnimationStyles.bounce, {Position = knobPos}):Play()
                
                pcall(callback, isEnabled)
            end)
            
            addHoverEffect(toggleFrame, colors.accent)
            return {Set = function(state) if state ~= isEnabled then toggleButton.MouseButton1Click:Fire() end end}
        end
        
        -- إنشاء منزلقات القيم
        function tabLibrary:CreateSlider(text, minValue, maxValue, callback)
            local sliderFrame = Instance.new("Frame")
            local sliderLabel = Instance.new("TextLabel")
            local sliderTrack = Instance.new("Frame")
            local sliderFill = Instance.new("Frame")
            local sliderKnob = Instance.new("Frame")
            local sliderButton = Instance.new("TextButton")
            local valueLabel = Instance.new("TextLabel")
            
            sliderFrame.Name = text
            sliderFrame.Parent = tabFrame
            sliderFrame.BackgroundColor3 = colors.secondary
            sliderFrame.BorderSizePixel = 0
            sliderFrame.Size = UDim2.new(1, -20, 0, 50)
            
            local frameCorner = Instance.new("UICorner")
            frameCorner.CornerRadius = UDim.new(0, 8)
            frameCorner.Parent = sliderFrame
            
            sliderLabel.Parent = sliderFrame
            sliderLabel.BackgroundTransparency = 1
            sliderLabel.Position = UDim2.new(0, 15, 0, 5)
            sliderLabel.Size = UDim2.new(1, -100, 0, 20)
            sliderLabel.Font = Enum.Font.GothamSemibold
            sliderLabel.Text = "🎚️ " .. text
            sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            sliderLabel.TextSize = 14
            sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            valueLabel.Parent = sliderFrame
            valueLabel.BackgroundTransparency = 1
            valueLabel.Position = UDim2.new(1, -80, 0, 5)
            valueLabel.Size = UDim2.new(0, 60, 0, 20)
            valueLabel.Font = Enum.Font.GothamBold
            valueLabel.Text = tostring(minValue)
            valueLabel.TextColor3 = colors.accent
            valueLabel.TextSize = 14
            
            sliderTrack.Parent = sliderFrame
            sliderTrack.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            sliderTrack.Position = UDim2.new(0, 15, 0, 30)
            sliderTrack.Size = UDim2.new(1, -30, 0, 6)
            
            local trackCorner = Instance.new("UICorner")
            trackCorner.CornerRadius = UDim.new(0, 3)
            trackCorner.Parent = sliderTrack
            
            sliderFill.Parent = sliderTrack
            sliderFill.BackgroundColor3 = colors.accent
            sliderFill.Size = UDim2.new(0, 0, 1, 0)
            
            local fillCorner = Instance.new("UICorner")
            fillCorner.CornerRadius = UDim.new(0, 3)
            fillCorner.Parent = sliderFill
            
            sliderKnob.Parent = sliderTrack
            sliderKnob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            sliderKnob.Position = UDim2.new(0, -6, 0.5, -6)
            sliderKnob.Size = UDim2.new(0, 12, 0, 12)
            
            local knobCorner = Instance.new("UICorner")
            knobCorner.CornerRadius = UDim.new(0, 6)
            knobCorner.Parent = sliderKnob
            
            sliderButton.Parent = sliderTrack
            sliderButton.BackgroundTransparency = 1
            sliderButton.Size = UDim2.new(1, 0, 1, 0)
            sliderButton.Text = ""
            
            local isDragging = false
            local currentValue = minValue
            
            local function updateSlider(value)
                currentValue = math.clamp(value, minValue, maxValue)
                local percentage = (currentValue - minValue) / (maxValue - minValue)
                
                TweenService:Create(sliderFill, AnimationStyles.quick, {Size = UDim2.new(percentage, 0, 1, 0)}):Play()
                TweenService:Create(sliderKnob, AnimationStyles.quick, {Position = UDim2.new(percentage, -6, 0.5, -6)}):Play()
                
                valueLabel.Text = tostring(math.floor(currentValue))
                pcall(callback, currentValue)
            end
            
            sliderButton.MouseButton1Down:Connect(function()
                isDragging = true
                play("rbxassetid://6652067432", 0.2, 1.5)
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    isDragging = false
                end
            end)
            
            sliderButton.MouseMoved:Connect(function()
                if isDragging then
                    local mouse = game.Players.LocalPlayer:GetMouse()
                    local percentage = math.clamp((mouse.X - sliderTrack.AbsolutePosition.X) / sliderTrack.AbsoluteSize.X, 0, 1)
                    local value = minValue + (maxValue - minValue) * percentage
                    updateSlider(value)
                end
            end)
            
            addHoverEffect(sliderFrame, colors.accent)
            updateSlider(minValue)
            
            return {SetValue = updateSlider}
        end
        
        return tabLibrary
    end
    
    return windowLibrary
end

return library
