local RedzLib = {}

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")

-- Discord-style tween presets
local TweenPresets = {
    Discord = {
        Open = TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out),
        Close = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.In),
        Hover = TweenInfo.new(0.15, Enum.EasingStyle.Linear),
        Toggle = TweenInfo.new(0.2, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
    }
}

-- Utility functions
local function Create(instanceType, properties)
    local instance = Instance.new(instanceType)
    for property, value in pairs(properties) do
        instance[property] = value
    end
    return instance
end

local function DiscordTween(instance, properties, preset)
    local tweenInfo = TweenPresets.Discord[preset] or TweenInfo.new(0.3)
    local tween = TweenService:Create(instance, tweenInfo, properties)
    tween:Play()
    return tween
end

-- Library initialization
function RedzLib:Init()
    local ScreenGui = Create("ScreenGui", {
        Parent = game.CoreGui,
        Name = "RedzLibUI"
    })

    self.ScreenGui = ScreenGui
    return self
end

-- Window creation
function RedzLib:CreateWindow(options)
    local window = {
        Title = options.Title or "RedzLib Window",
        Size = options.Size or UDim2.new(0, 400, 0, 500),
        Position = options.Position or UDim2.new(0.5, -200, 0.5, -250)
    }

    local MainFrame = Create("Frame", {
        Parent = self.ScreenGui,
        Size = window.Size,
        Position = window.Position,
        BackgroundColor3 = Color3.fromRGB(54, 57, 63),
        AnchorPoint = Vector2.new(0.5, 0.5)
    })

    local TopBar = Create("Frame", {
        Parent = MainFrame,
        Size = UDim2.new(1, 0, 0, 40),
        BackgroundColor3 = Color3.fromRGB(47, 49, 54),
        BorderSizePixel = 0
    })

    local TitleLabel = Create("TextLabel", {
        Parent = TopBar,
        Text = window.Title,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Font = Enum.Font.GothamSemibold,
        TextSize = 14,
        Position = UDim2.new(0, 15, 0.5, -7),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundTransparency = 1
    })

    -- Discord-style close button
    local CloseButton = Create("TextButton", {
        Parent = TopBar,
        Text = "Ã—",
        TextColor3 = Color3.fromRGB(220, 220, 220),
        Font = Enum.Font.GothamBold,
        TextSize = 18,
        Size = UDim2.new(0, 32, 0, 32),
        Position = UDim2.new(1, -32, 0.5, -16),
        AnchorPoint = Vector2.new(1, 0.5),
        BackgroundTransparency = 1
    })

    CloseButton.MouseEnter:Connect(function()
        DiscordTween(CloseButton, {TextColor3 = Color3.fromRGB(255, 255, 255)}, "Hover")
    end)

    CloseButton.MouseLeave:Connect(function()
        DiscordTween(CloseButton, {TextColor3 = Color3.fromRGB(220, 220, 220)}, "Hover")
    end)

    CloseButton.Activated:Connect(function()
        DiscordTween(MainFrame, {Size = UDim2.new(0, 0, 0, 0)}, "Close").Completed:Wait()
        MainFrame:Destroy()
    end)

    -- Tab system
    local TabContainer = Create("Frame", {
        Parent = MainFrame,
        Size = UDim2.new(1, 0, 1, -40),
        Position = UDim2.new(0, 0, 0, 40),
        BackgroundTransparency = 1
    })

    local TabButtons = Create("ScrollingFrame", {
        Parent = MainFrame,
        Size = UDim2.new(0, 120, 1, -40),
        Position = UDim2.new(0, 0, 0, 40),
        BackgroundColor3 = Color3.fromRGB(47, 49, 54),
        ScrollBarThickness = 0,
        BorderSizePixel = 0
    })

    local UIListLayout = Create("UIListLayout", {
        Parent = TabButtons,
        Padding = UDim.new(0, 5)
    })

    -- Window methods
    function window:AddTab(tabName)
        local tab = {
            Name = tabName or "New Tab"
        }

        local TabButton = Create("TextButton", {
            Parent = TabButtons,
            Text = tab.Name,
            Size = UDim2.new(1, -10, 0, 32),
            BackgroundColor3 = Color3.fromRGB(66, 70, 77),
            TextColor3 = Color3.fromRGB(220, 220, 220),
            Font = Enum.Font.Gotham,
            TextSize = 12
        })

        local TabContent = Create("ScrollingFrame", {
            Parent = TabContainer,
            Size = UDim2.new(1, -120, 1, 0),
            Position = UDim2.new(0, 120, 0, 0),
            BackgroundTransparency = 1,
            ScrollBarThickness = 3,
            Visible = false
        })

        local ContentLayout = Create("UIListLayout", {
            Parent = TabContent,
            Padding = UDim.new(0, 10)
        })

        -- Tab button interactions
        TabButton.MouseEnter:Connect(function()
            DiscordTween(TabButton, {BackgroundColor3 = Color3.fromRGB(78, 82, 90)}, "Hover")
        end)

        TabButton.MouseLeave:Connect(function()
            DiscordTween(TabButton, {BackgroundColor3 = Color3.fromRGB(66, 70, 77)}, "Hover")
        end)

        TabButton.Activated:Connect(function()
            for _, content in pairs(TabContainer:GetChildren()) do
                if content:IsA("ScrollingFrame") then
                    content.Visible = false
                end
            end
            TabContent.Visible = true
            DiscordTween(TabButton, {BackgroundColor3 = Color3.fromRGB(88, 101, 242)}, "Toggle")
        end)

        -- Tab methods
        function tab:AddToggle(options)
            local toggle = {
                Name = options.Name or "Toggle",
                Default = options.Default or false,
                Callback = options.Callback or function() end
            }

            local ToggleFrame = Create("Frame", {
                Parent = TabContent,
                Size = UDim2.new(1, -20, 0, 32),
                BackgroundColor3 = Color3.fromRGB(66, 70, 77),
                BackgroundTransparency = 0.5
            })

            local ToggleLabel = Create("TextLabel", {
                Parent = ToggleFrame,
                Text = toggle.Name,
                TextColor3 = Color3.fromRGB(220, 220, 220),
                Font = Enum.Font.Gotham,
                TextSize = 12,
                Size = UDim2.new(0.7, 0, 1, 0),
                BackgroundTransparency = 1,
                TextXAlignment = Enum.TextXAlignment.Left
            })

            local ToggleButton = Create("Frame", {
                Parent = ToggleFrame,
                Size = UDim2.new(0, 40, 0, 20),
                Position = UDim2.new(1, -10, 0.5, -10),
                AnchorPoint = Vector2.new(1, 0.5),
                BackgroundColor3 = Color3.fromRGB(47, 49, 54)
            })

            local ToggleCircle = Create("Frame", {
                Parent = ToggleButton,
                Size = UDim2.new(0, 16, 0, 16),
                Position = toggle.Default and UDim2.new(1, -8, 0.5, -8) or UDim2.new(0, 4, 0.5, -8),
                AnchorPoint = Vector2.new(0.5, 0.5),
                BackgroundColor3 = toggle.Default and Color3.fromRGB(88, 101, 242) or Color3.fromRGB(220, 220, 220)
            })

            -- Toggle functionality
            local state = toggle.Default

            local function UpdateToggle()
                DiscordTween(ToggleCircle, {
                    Position = state and UDim2.new(1, -8, 0.5, -8) or UDim2.new(0, 4, 0.5, -8),
                    BackgroundColor3 = state and Color3.fromRGB(88, 101, 242) or Color3.fromRGB(220, 220, 220)
                }, "Toggle")
                
                toggle.Callback(state)
            end

            ToggleFrame.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    state = not state
                    UpdateToggle()
                end
            end)

            -- Toggle methods
            function toggle:Set(value)
                if state ~= value then
                    state = value
                    UpdateToggle()
                end
            end

            function toggle:Get()
                return state
            end

            return toggle
        end

        return tab
    end

    -- Initial animation
    MainFrame.Size = UDim2.new(0, 0, 0, 0)
    DiscordTween(MainFrame, {Size = window.Size}, "Open")

    return window
end

return RedzLib
